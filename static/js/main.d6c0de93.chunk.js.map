{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","userId","usersFromServer","find","undefined","App","useState","selectedTitle","setTitle","selectedUser","setUser","addNewTodo","setTodo","validationTitle","setValTitle","validationUser","setValUser","useEffect","action","method","onSubmit","event","preventDefault","htmlFor","type","value","placeholder","onChange","target","disabled","onClick","findUser","newTodo","sort","a","b","length","newAdd","push","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d6c0de93.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    title,\n    user,\n    completed,\n  } = todo;\n\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","import { useEffect, useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport { TodoList } from './components/TodoList/TodoList';\n\nfunction getUser(userId: number): User | undefined {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || undefined;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [selectedTitle, setTitle] = useState('');\n  const [selectedUser, setUser] = useState('');\n  const [addNewTodo, setTodo] = useState(todos);\n  const [validationTitle, setValTitle] = useState(true);\n  const [validationUser, setValUser] = useState(true);\n\n  const clearForm = () => {\n    setTitle('');\n    setUser('');\n  };\n\n  useEffect(() => {\n    return () => {\n      return clearForm();\n    };\n  }, [addNewTodo]);\n\n  useEffect(() => {\n    setValTitle(true);\n  }, [selectedTitle]);\n\n  useEffect(() => {\n    setValUser(true);\n  }, [selectedUser]);\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={(event) => {\n          event.preventDefault();\n        }}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleId\">\n            Title:\n          </label>\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            name=\"titleId\"\n            value={selectedTitle}\n            placeholder=\"Please enter a title\"\n            onChange={event => {\n              const { target } = event;\n\n              setTitle(target.value);\n            }}\n          />\n\n          {!validationTitle\n          && (<span className=\"error\">Please enter a title</span>)}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelectedId\">\n            User:\n          </label>\n\n          <select\n            name=\"userSelectedId\"\n            data-cy=\"userSelect\"\n            value={selectedUser}\n            onChange={event => {\n              const { target } = event;\n\n              setUser(target.value);\n            }}\n          >\n            <option value=\"\" disabled>Choose a user</option>\n\n            {usersFromServer.map(user => (\n              <option\n                key={user.id}\n                value={user.name}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {!validationUser\n          && (<span className=\"error\">Please choose a user</span>)}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={() => {\n            const findUser = usersFromServer.find(\n              user => user.name === selectedUser,\n            );\n\n            const largeId = [...todos].sort(\n              (a, b) => a.id - b.id,\n            )[todos.length - 1].id;\n\n            const newTodo = {\n              id: largeId + 1,\n              title: selectedTitle,\n              completed: false,\n              userId: findUser?.id && undefined,\n              user: findUser,\n            };\n\n            const newAdd = [...addNewTodo];\n\n            newAdd.push(newTodo);\n\n            if (selectedTitle && selectedUser) {\n              setTodo(newAdd);\n            }\n\n            if (!selectedTitle) {\n              setValTitle(false);\n            }\n\n            if (!selectedUser) {\n              setValUser(false);\n            }\n          }}\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={addNewTodo} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}